"""
# <튜플>
- 컬렉션타입 : 여러요소들을 모아서 처리하는 구조
- 한 번 정해지면 변경 불가
- 순서가 있다.
- 여러 개의 데이터를 ,(쉼표)로 구분
- ( )괄호를 감싸 표현한다.
"""

T1 = ( )
T2 = (1,2,3,4,5)
T3 = (2,4,'판다','강아지')

# 인덱싱을 튜플 안의 값을 '순서'로 찾아 접근하는 방식이다.
print(T2[3])
print(T3[0])

# 인덱스 슬라이싱
print(T2[:])    #다 가져온다.
print(T2[0:1])
print(T2[1:])   # 1부터 시작, 튜플의 첫번째 값부터 마지막 값까지 가져온다.
print(T2[:4])   # 4번 전까지, 튜플의 0번째 값부터 4-1번째 값까지 가져온다.
print(T2[::2])  # 2 간격, 튜플의 전체 데이터 중 2개씩 건너뛰며 값을 가져온다.

print(T2[-1:])
print(T2[:-3])
print(T2[::-2])
print(T2[::-1])

T1 = (1,2,3)
T2 = (4,5,6)
T3 = T1+T2
print(T3)

T4 = (1,2,3)
T5 = T3*3
print(T5)

"""# <셋 SET>
셋(set, 집합) 또한 컬렉션 타입의 데이터다.
- 데이터 안의 중복을 허용X
- 데이터 간의 순서가 없다.
- set은 위치를 통해 접근(인덱싱) 할 수가 없다.
- 셋을 튜플이나 리스트로 변경한 후 데이터에 접근
"""

S1 = ()
S2 = set([1, 2, 3])

Transe_t = tuple(S2)
print(Transe_t[0])

Transe_t = list(S2)
print(Transe_t[2])

S1 = set([1, 3, 5, 7, 9, 10])
S2 = set([2, 4, 6, 8, 10])

S2.add(12)
print(S2)

S1.update([11, 13, 15])
print(S1)

S1.remove(10)
print(S1)

S1 = set([1, 3, 5, 7, 9, 10])
S2 = set([2, 4, 6, 8, 10])

#교집합
S1 & S2
S1.intersection(S2)

#차집합
S1 - S2
S1.difference(S2)

#합집합
S1 | S2
S1.union(S2)

# .은 method(메서드)라고 함.

"""#< Summary >
- 컬렉션 데이터 타입은 여러개의 데이터를 하나의 변수에 저장하여 다룰 수 있는 데이터 타입.
- 컬렉션 타입에 해당하는 자료형에는 tuple, set, list, dictionary가 있다.
- 튜플은 순서가 있고, ( )로 정의하는 데이터 타입, 변경 불가
- 튜플은 더하기, 곱하기 통해 새로운 튜플 정의할 수 있다.
- 셋은 순서가 없고, ( )로 정의하는 데이터 타입, 내부의 데이터 간의 중복이 없다.
- 셋은 순서가 없으므로, 내부 데이터에 접근하기 위해서는 튜플이나 리스트로 변경이 필요.
- 셋은 교집합(intersection), 차집합(difference), 합집합(union) 연산을 할 수 있다.
- 셋에서 1개의 데이터를 추가하면 add, 여러 개 데이터 추가 update, 삭제 remove를 사용한다.

비교 연산자 활용하기
"""

print(3==3)

ans1 = 3 == 3
print(ans1)

print(5 < 3)

(3 == 3) and (2 < 4) and (3 < 5)

(4 > 6) or ("apple" == "Apple") or (1 != 0)

(4 > 6) or ("apple" == "Apple") or (1 != 1)

not (False)

# 비교연산자 적용, 반복문 만들기
num = int(input())     #input()으로 사용자가 입력값을 받은 값 >> 문자 (string)
                       #int() 정수를 만들어주는 함수(integer 함수)사용, 문자 >> 숫자변경("22">> 22)

if num % 2 == 0:    # % : 나머지
  print(num,"짝수입니다.")
else:
  print(num,"홀수입니다.")

ans = 25
submit = int(input())

if ans < submit:
  print("정답보다 더 큰 수를 입력했네요. 다시하세요.")

elif ans == submit:
  print("정답")

else:
  print("정답보다 더 적은 수를 입력하셨네요. 다시하세요.")

